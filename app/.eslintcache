[{"/home/akshat/.local/FlyingFox/app/src/index.js":"1","/home/akshat/.local/FlyingFox/app/src/App.js":"2","/home/akshat/.local/FlyingFox/app/src/reportWebVitals.js":"3","/home/akshat/.local/FlyingFox/app/src/serviceWorker.js":"4","/home/akshat/.local/FlyingFox/app/src/Logo.js":"5","/home/akshat/.local/FlyingFox/app/src/ColorModeSwitcher.js":"6","/home/akshat/.local/FlyingFox/app/src/components/generate.js":"7","/home/akshat/.local/FlyingFox/app/src/components/color-field.js":"8","/home/akshat/.local/FlyingFox/app/src/data.js":"9","/home/akshat/.local/FlyingFox/app/src/components/number-field.js":"10","/home/akshat/.local/FlyingFox/app/src/components/browser/browser-preview.js":"11","/home/akshat/.local/FlyingFox/app/src/components/browser/icon-wrapper.js":"12","/home/akshat/.local/FlyingFox/app/src/components/palette/palette-group.js":"13","/home/akshat/.local/FlyingFox/app/src/components/palette/palette.js":"14","/home/akshat/.local/FlyingFox/app/src/components/button-pair.js":"15","/home/akshat/.local/FlyingFox/app/src/components/code/code.js":"16","/home/akshat/.local/FlyingFox/app/src/components/code/code-block.js":"17","/home/akshat/.local/FlyingFox/app/src/components/dropdown-field.js":"18"},{"size":840,"mtime":1610234700952,"results":"19","hashOfConfig":"20"},{"size":266,"mtime":1611976408310,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1610234700952,"results":"22","hashOfConfig":"20"},{"size":5081,"mtime":1610234700952,"results":"23","hashOfConfig":"20"},{"size":489,"mtime":1610234700952,"results":"24","hashOfConfig":"20"},{"size":617,"mtime":1610234700952,"results":"25","hashOfConfig":"20"},{"size":9325,"mtime":1612115154095,"results":"26","hashOfConfig":"20"},{"size":2336,"mtime":1611925213689,"results":"27","hashOfConfig":"20"},{"size":4672,"mtime":1612054094500,"results":"28","hashOfConfig":"20"},{"size":1509,"mtime":1611977367481,"results":"29","hashOfConfig":"20"},{"size":3326,"mtime":1610649819926,"results":"30","hashOfConfig":"20"},{"size":515,"mtime":1610591553916,"results":"31","hashOfConfig":"20"},{"size":591,"mtime":1610612613878,"results":"32","hashOfConfig":"20"},{"size":308,"mtime":1610619993125,"results":"33","hashOfConfig":"20"},{"size":1302,"mtime":1611972599647,"results":"34","hashOfConfig":"20"},{"size":1579,"mtime":1612057967050,"results":"35","hashOfConfig":"20"},{"size":1602,"mtime":1612058503902,"results":"36","hashOfConfig":"20"},{"size":821,"mtime":1612045797423,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ogho6x",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"40"},"/home/akshat/.local/FlyingFox/app/src/index.js",[],["85","86"],"/home/akshat/.local/FlyingFox/app/src/App.js",[],"/home/akshat/.local/FlyingFox/app/src/reportWebVitals.js",[],"/home/akshat/.local/FlyingFox/app/src/serviceWorker.js",[],"/home/akshat/.local/FlyingFox/app/src/Logo.js",[],"/home/akshat/.local/FlyingFox/app/src/ColorModeSwitcher.js",[],["87","88"],"/home/akshat/.local/FlyingFox/app/src/components/generate.js",["89","90","91","92","93"],"/home/akshat/.local/FlyingFox/app/src/components/color-field.js",["94","95","96","97","98","99"],"import React, { useState } from 'react';\nimport {\n  Tooltip,\n  Box,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Text,\n  HStack,\n} from '@chakra-ui/react';\nimport {\n  RiContrast2Fill,\n  RiContrast2Line,\n  RiErrorWarningFill,\n  RiPaintFill,\n} from 'react-icons/ri';\nconst convert = require('color-convert');\n\nfunction ColorField(props) {\n  const [value, setValue] = React.useState(props.default);\n  const [tooLight, setTooLight] = React.useState(false);\n  const [error, setError] = React.useState(false);\n  const handleChange = event => {\n    let v = event.target.value;\n    v = v[0] !== '#' ? '#' + v : v;\n    v = v[0] === '#' && v[1] === '#' ? v.substring(1) : v;\n    v.toLowerCase();\n    setValue(v);\n    if (/^#[0-9A-F]{6}$/i.test(v) || /^#([0-9A-F]{3}){1,2}$/i.test(v)) {\n      if (props.name == 'Dark') setTooLight(convert.hex.hsl(v)[2] > 40);\n      else if (props.name == 'Light') setTooLight(convert.hex.hsl(v)[2] < 60);\n\n      setError(false);\n      props.onChange(v, props.name);\n    } else {\n      setError(true);\n    }\n  };\n  let icon;\n  if (props.name == 'Dark') {\n    icon = <RiContrast2Fill />;\n  } else if (props.name == 'Light') {\n    icon = <RiContrast2Line />;\n  } else {\n    icon = <RiPaintFill />;\n  }\n  // TODO: onblur to generate palette when lost focus\n  return (\n    <Box width=\"100%\" color=\"gray.600\">\n      <HStack spacing={2} float=\"left\">\n        {icon}\n        <Text fontSize=\"md\">{props.name}</Text>\n        {/* when color is too light */}\n      </HStack>\n      <InputGroup width=\"130px\" size=\"sm\" float=\"right\" size=\"sm\">\n        <Input\n          borderRadius=\"md\"\n          value={value}\n          onChange={handleChange}\n          onKeyPress={handleChange}\n          onBlur={handleChange}\n          placeholder={props.default}\n          variant=\"filled\"\n          errorBorderColor=\"red.300\"\n          isInvalid={error}\n        />\n        <InputRightElement opacity={tooLight ? 1 : 0}>\n          <Tooltip\n            shouldWrapChildren\n            label={`Color might be too ${\n              props.name === 'Light' ? 'dark' : 'light'\n            }.`}\n            placement=\"bottom\"\n          >\n            <Box color=\"orange.200\">\n              <RiErrorWarningFill />\n            </Box>\n          </Tooltip>\n        </InputRightElement>\n      </InputGroup>\n    </Box>\n  );\n}\n\nexport default ColorField;\n","/home/akshat/.local/FlyingFox/app/src/data.js",["100"],"import config from './config.json';\n\nconst data = {\n  colorField: {\n    main: [\n      {\n        name: 'Dark',\n        default: config.main.dark['dark-base'],\n      },\n      {\n        name: 'Light',\n        default: config.main.light['light-base'],\n      },\n      {\n        name: 'Accent',\n        default: config.main.other['accent'],\n      },\n      {\n        name: 'Red',\n        default: config.main.other['red'],\n      },\n      {\n        name: 'Yellow',\n        default: config.main.other['yellow'],\n      },\n      {\n        name: 'Green',\n        default: config.main.other['green'],\n      },\n    ],\n    private: [\n      {\n        name: 'Dark',\n        default: config.private['dark-base'],\n      },\n      {\n        name: 'Light',\n        default: config.private['light-base'],\n      },\n      {\n        name: 'Accent',\n        default: config.private['accent'],\n      },\n      {\n        name: 'Red',\n        default: config.private['red'],\n      },\n      {\n        name: 'Yellow',\n        default: config.private['yellow'],\n      },\n      {\n        name: 'Green',\n        default: config.private['green'],\n      },\n    ],\n  },\n  numberFields: {\n    sidebar: [\n      {\n        name: 'Width',\n        default: config.main['sidebar-width'],\n      },\n      {\n        name: 'Collapsed Width',\n        default: config.main['sidebar-collapsed-width'],\n        subtext: 'Only used with hover sidebar.',\n      },\n    ],\n  },\n  dropdown: {\n    sidebar: {\n      name: 'Type',\n      default: 0,\n      values: ['Static', 'Hover', 'Overlay'],\n    },\n  },\n  syntaxHighlight: (dark, darkPalette, light, accent, yellow, green, red) => ({\n    hljs: {\n      display: 'block',\n      overflow: 'auto',\n      'max-height': '65vh',\n      background: dark,\n      color: light,\n    },\n    'hljs-name': {\n      fontWeight: 'bold',\n    },\n    'hljs-strong': {\n      fontWeight: 'bold',\n    },\n    'hljs-code': {\n      fontStyle: 'italic',\n      color: darkPalette[4],\n    },\n    'hljs-emphasis': {\n      fontStyle: 'italic',\n    },\n    'hljs-tag': {\n      color: '#62c8f3',\n    },\n    'hljs-variable': {\n      color: accent,\n    },\n    'hljs-template-variable': {\n      color: accent,\n    },\n    'hljs-selector-id': {\n      color: accent,\n    },\n    'hljs-selector-class': {\n      color: accent,\n    },\n    'hljs-string': {\n      color: green,\n    },\n    'hljs-bullet': {\n      color: red,\n    },\n    'hljs-type': {\n      color: yellow,\n    },\n    'hljs-title': {\n      color: yellow,\n    },\n    'hljs-section': {\n      color: yellow,\n    },\n    'hljs-attribute': {\n      color: yellow,\n    },\n    'hljs-quote': {\n      color: yellow,\n    },\n    'hljs-built_in': {\n      color: yellow,\n    },\n    'hljs-builtin-name': {\n      color: yellow,\n    },\n    'hljs-number': {\n      color: red,\n    },\n    'hljs-symbol': {\n      color: red,\n    },\n    'hljs-keyword': {\n      color: 'rgba(#fcc28c8c, 0.8)',\n    },\n    'hljs-selector-tag': {\n      color: 'rgba(#fcc28c8c, 0.8)',\n    },\n    'hljs-literal': {\n      color: 'rgba(#fcc28c8c, 0.8)',\n    },\n    'hljs-comment': {\n      color: darkPalette[4],\n    },\n    'hljs-deletion': {\n      color: darkPalette[3],\n      backgroundColor: red,\n    },\n    'hljs-regexp': {\n      color: 'rgba(#c6b4f0, 0.8)',\n    },\n    'hljs-link': {\n      color: 'rgba(#c6b4f0, 0.8)',\n    },\n    'hljs-meta': {\n      color: `rgba(${red}, 0.8)`,\n    },\n    'hljs-addition': {\n      backgroundColor: '#a2fca2',\n      color: darkPalette[3],\n    },\n  }),\n  configColors: (\n    dark,\n    darkPalette,\n    light,\n    lightPalette,\n    accent,\n    yellow,\n    green,\n    red\n  ) => `\n  --dark-0: ${darkPalette[0]};\n  --dark-base: ${dark};\n  --dark-1: ${darkPalette[1]};\n  --dark-2: ${darkPalette[2]};\n  --dark-3: ${darkPalette[3]};\n  --dark-4: ${darkPalette[4]};\n  --light-0: ${lightPalette[0]};\n  --light-base: ${light};\n  --light-1: ${lightPalette[1]};\n  --light-2: ${lightPalette[2]};\n  --light-3: ${lightPalette[3]};\n  --light-4: ${lightPalette[4]};\n  --accent: ${accent};\n  --yellow: ${yellow};\n  --green: ${green};\n  --red: ${red};`,\n  configMain: (sidebarWidth, sidebarCollapsedWidth) => `\n  --sidebar-width: ${sidebarWidth}; \n  --sidebar-collapsed-width: ${sidebarCollapsedWidth}; \n  --extension-icon-mask: grayscale(100%) invert(75%) sepia(8%) saturate(862%) hue-rotate(173deg) brightness(88%);`,\n  configSidebarType: type => {\n    switch (type) {\n      case 0:\n        return '@import \"userChrome-static.css\";\\n';\n      case 1:\n        return '@import \"userChrome-hover.css\";\\n';\n      case 2:\n        return '@import \"userChrome-overlay.css\";\\n';\n    }\n  },\n  paletteProfiles: {\n    dark: [2, 8, 4, 8, 4],\n    light: [-12, -16, -4, -4, -4],\n  },\n};\n\nexport default data;\n","/home/akshat/.local/FlyingFox/app/src/components/number-field.js",["101","102","103"],"import React, { useState } from 'react';\nimport {\n  Box,\n  InputGroup,\n  InputRightAddon,\n  NumberInput,\n  NumberInputField,\n  Text,\n  HStack,\n  VStack,\n} from '@chakra-ui/react';\nimport { AiOutlineColumnWidth } from 'react-icons/ai';\nimport { RiTimeFill } from 'react-icons/ri';\n\nfunction NumberField(props) {\n  const [value, setValue] = React.useState(props.default);\n  const handleChange = event => {\n    let v = event.target.value;\n    setValue(v);\n    if (/^\\d+$/.test(v)) {\n      props.onChange(v, props.name);\n    }\n  };\n  let icon;\n  if (props.type == 'width') {\n    icon = <AiOutlineColumnWidth />;\n  } else if (props.type == 'time') {\n    icon = <RiTimeFill />;\n  } else {\n  }\n  return (\n    <Box width=\"100%\" color=\"gray.600\">\n      <VStack spacing={1} float=\"left\" textAlign=\"left\">\n        <HStack spacing={2} alignSelf=\"start\">\n          {icon}\n          <Text>{props.name}</Text>\n        </HStack>\n        <Text fontSize=\"xs\" color=\"gray.400\" alignSelf=\"start\">\n          {props.subtext}\n        </Text>\n      </VStack>\n      <NumberInput float=\"right\" value={value}>\n        <InputGroup size=\"sm\" w=\"130px\">\n          <NumberInputField\n            type=\"number\"\n            w=\"80px\"\n            size=\"sm\"\n            borderLeftRadius=\"md\"\n            onChange={handleChange}\n            placeholder={props.default}\n          />\n          <InputRightAddon borderRightRadius=\"md\" children={props.unit} />\n        </InputGroup>\n      </NumberInput>\n    </Box>\n  );\n}\n\nexport default NumberField;\n","/home/akshat/.local/FlyingFox/app/src/components/browser/browser-preview.js",["104"],"import React, { useState } from 'react';\nimport { Flex, Box, HStack, Spacer } from '@chakra-ui/react';\nimport {\n  RiArrowLeftSLine,\n  RiArrowRightSLine,\n  RiBookMarkFill,\n  RiBookmarkLine,\n  RiCheckboxBlankCircleFill,\n  RiHome5Fill,\n  RiLock2Fill,\n  RiMenu3Fill,\n  RiMore2Fill,\n  RiRestartLine,\n  RiShieldFlashFill,\n} from 'react-icons/ri';\nimport IconWrapper from './icon-wrapper';\n\nfunction setTitlebarControlStyles(color) {\n  return { color: color, opacity: 0.8 };\n}\nfunction BrowserPreview(props) {\n  let spacing = { sm: 1, md: 0, lg: 2 };\n  return (\n    <Box\n      w=\"90%\"\n      maxW=\"1200px\"\n      minH=\"50vh\"\n      bg={props.dark}\n      boxShadow=\"dark-lg\"\n      p={2}\n      borderRadius=\"lg\"\n    >\n      <Flex>\n        <HStack spacing={spacing} ml={spacing} fontSize=\"sm\">\n          <RiCheckboxBlankCircleFill\n            style={setTitlebarControlStyles(props.red)}\n          />\n          <RiCheckboxBlankCircleFill\n            style={setTitlebarControlStyles(props.yellow)}\n          />\n          <RiCheckboxBlankCircleFill\n            style={setTitlebarControlStyles(props.green)}\n          />\n          <HStack pl={spacing} spacing={1}>\n            <IconWrapper\n              size=\"lg\"\n              color={props.light}\n              hover_bg={props.darkPalette[2]}\n            >\n              <RiArrowLeftSLine />\n            </IconWrapper>\n            <IconWrapper\n              size=\"lg\"\n              color={props.light}\n              hover_bg={props.darkPalette[2]}\n            >\n              <RiArrowRightSLine />\n            </IconWrapper>\n            <IconWrapper color={props.light} hover_bg={props.darkPalette[2]}>\n              <RiRestartLine />\n            </IconWrapper>\n            <IconWrapper color={props.light} hover_bg={props.darkPalette[2]}>\n              <RiHome5Fill />\n            </IconWrapper>\n          </HStack>\n        </HStack>\n        <Spacer />\n        <Flex\n          minW={{ sm: 'auto', md: '30%', lg: '50%' }}\n          borderRadius=\"md\"\n          p={1}\n          bg={props.darkPalette[1]}\n        >\n          <IconWrapper\n            size=\"xs\"\n            color={props.light}\n            hover_bg={props.darkPalette[2]}\n          >\n            <RiLock2Fill />\n          </IconWrapper>\n          <Spacer />\n          <Box\n            w=\"40%\"\n            alignSelf=\"center\"\n            h=\"12px\"\n            bg={props.lightPalette[2]}\n            borderRadius=\"lg\"\n          />\n          <Spacer />\n          <IconWrapper\n            size=\"xs\"\n            color={props.light}\n            hover_bg={props.darkPalette[2]}\n          >\n            <RiBookmarkLine />\n          </IconWrapper>\n        </Flex>\n        <Spacer />\n        <HStack spacing={1}>\n          <IconWrapper color={props.light} hover_bg={props.darkPalette[2]}>\n            <RiBookMarkFill />\n          </IconWrapper>\n          <IconWrapper color={props.light} hover_bg={props.darkPalette[2]}>\n            <RiShieldFlashFill />\n          </IconWrapper>\n          <IconWrapper color={props.light} hover_bg={props.darkPalette[2]}>\n            <RiMore2Fill />\n          </IconWrapper>\n          <IconWrapper color={props.light} hover_bg={props.darkPalette[2]}>\n            <RiMenu3Fill />\n          </IconWrapper>\n        </HStack>\n      </Flex>\n      {props.children}\n    </Box>\n  );\n}\n\nexport default BrowserPreview;\n","/home/akshat/.local/FlyingFox/app/src/components/browser/icon-wrapper.js",[],"/home/akshat/.local/FlyingFox/app/src/components/palette/palette-group.js",["105","106","107","108"],"import React, { useState } from 'react';\nimport { Flex, Box, HStack, Spacer } from '@chakra-ui/react';\nimport Palette from './palette';\n\nfunction PaletteGroup(props) {\n  return (\n    <HStack\n      bg={props.contrast ? props.contrast : ''}\n      p={props.contrast ? 4 : ''}\n      boxShadow={props.detached ? '' : 'lg'}\n      borderRadius=\"md\"\n      overflow={props.detached ? '' : 'hidden'}\n      spacing={props.detached ? 6 : 0}\n    >\n      {props.colors.map(c => {\n        return <Palette color={c} detached={props.detached} />;\n      })}\n    </HStack>\n  );\n}\n\nexport default PaletteGroup;\n","/home/akshat/.local/FlyingFox/app/src/components/palette/palette.js",["109","110","111","112"],"import React, { useState } from 'react';\nimport { Flex, Box, HStack, Spacer } from '@chakra-ui/react';\n\nfunction Palette(props) {\n  return (\n    <Box\n      boxSize=\"8vmin\"\n      borderRadius={props.detached ? 'md' : ''}\n      boxShadow=\"lg\"\n      bg={props.color}\n    ></Box>\n  );\n}\n\nexport default Palette;\n","/home/akshat/.local/FlyingFox/app/src/components/button-pair.js",["113","114","115","116","117"],"import React, { useState } from 'react';\nimport { ButtonGroup, Button } from '@chakra-ui/react';\n\nfunction ButtonPair(props) {\n  let { selected: c_sel, regular: c_reg } = props.color ? props.color : {};\n  let shadow = `0 5px 25px -10px ${props.bgSelected[0]}A0, -5px 0 10px -5px ${props.bgSelected[0]}A0, 5px 0 10px -5px ${props.bgSelected[0]}A0`;\n  return (\n    <ButtonGroup\n      alignSelf={props.alignSelf}\n      mb={8}\n      colorScheme=\"black\"\n      size=\"sm\"\n    >\n      {props.content.map((c, i) => {\n        return (\n          <Button\n            bgGradient={\n              props.selected == i\n                ? `linear(to-r,${props.bgSelected[0]},${props.bgSelected[1]})`\n                : ''\n            }\n            bg=\"transparent\"\n            boxShadow={props.selected == i ? shadow : 'none'}\n            color={props.selected == i ? c_sel : c_reg}\n            _hover={\n              props.selected == i\n                ? { background: '' }\n                : { background: props.hoverBg ? props.hoverBg : 'gray.300' }\n            }\n            _focus={{ border: 'none' }}\n            onClick={() => props.onClick(i)}\n            fontWeight=\"500\"\n          >\n            {props.icon ? c() : c}\n          </Button>\n        );\n      })}\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonPair;\n","/home/akshat/.local/FlyingFox/app/src/components/code/code.js",[],"/home/akshat/.local/FlyingFox/app/src/components/code/code-block.js",["118"],"import { useClipboard, useToast, Box, VStack } from '@chakra-ui/react';\nimport { RiDownload2Fill, RiFileCopy2Fill } from 'react-icons/ri';\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport css from 'react-syntax-highlighter/dist/esm/languages/hljs/css';\nimport ButtonPair from '../button-pair';\nSyntaxHighlighter.registerLanguage('css', css);\n\nfunction CodeBlock({ dark, darkPalette, light, style, code, name }) {\n  const { hasCopied, onCopy } = useClipboard(code);\n  const toast = useToast();\n  return (\n    <>\n      <VStack\n        bg={dark}\n        p=\"8\"\n        spacing=\"0\"\n        fontSize=\"sm\"\n        borderRadius=\"lg\"\n        boxShadow=\"dark-lg\"\n      >\n        <Box mb=\"-16\" alignSelf=\"end\">\n          <ButtonPair\n            content={[RiDownload2Fill, RiFileCopy2Fill]}\n            bgSelected={[darkPalette[1], darkPalette[2]]}\n            hoverBg={darkPalette[2]}\n            color={{ selected: light, regular: light }}\n            selected={1}\n            onClick={i => {\n              if (i === 1)\n                toast({\n                  title: `${name} copied to clipboard.`,\n                  description: '',\n                  status: 'success',\n                  duration: 2000,\n                });\n              return i === 1 ? onCopy() : null;\n            }}\n            icon\n          />\n        </Box>\n        <SyntaxHighlighter\n          wrapLines={true}\n          wrapLongLines={true}\n          language=\"css\"\n          style={style}\n        >\n          {code}\n        </SyntaxHighlighter>\n      </VStack>\n    </>\n  );\n}\n\nexport default CodeBlock;\n","/home/akshat/.local/FlyingFox/app/src/components/dropdown-field.js",["119"],"import React, { useState } from 'react';\nimport { Box, Select, Text, HStack, VStack } from '@chakra-ui/react';\n\nfunction DropdownField(props) {\n  return (\n    <Box width=\"100%\" color=\"gray.600\">\n      <VStack spacing={1} float=\"left\" textAlign=\"left\">\n        <HStack spacing={2} alignSelf=\"start\">\n          {props.icon()}\n          <Text>{props.name}</Text>\n        </HStack>\n        <Text fontSize=\"xs\" color=\"gray.400\" alignSelf=\"start\">\n          {props.subtext}\n        </Text>\n      </VStack>\n      <Box width=\"130px\" float=\"right\">\n        <Select\n          _focus={{ border: 'none' }}\n          onChange={props.callback}\n          borderRadius=\"md\"\n          variant=\"filled\"\n          size=\"sm\"\n        >\n          {props.options}\n        </Select>\n      </Box>\n    </Box>\n  );\n}\n\nexport default DropdownField;\n",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"120","replacedBy":"124"},{"ruleId":"122","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":13,"column":3,"nodeType":"128","messageId":"129","endLine":13,"endColumn":9},{"ruleId":"130","severity":1,"message":"131","line":51,"column":5,"nodeType":"132","messageId":"133","endLine":72,"endColumn":6},{"ruleId":"130","severity":1,"message":"131","line":75,"column":5,"nodeType":"132","messageId":"133","endLine":82,"endColumn":6},{"ruleId":"134","severity":1,"message":"135","line":132,"column":25,"nodeType":"136","messageId":"137","endLine":132,"endColumn":27},{"ruleId":"134","severity":1,"message":"135","line":255,"column":23,"nodeType":"136","messageId":"137","endLine":255,"endColumn":25},{"ruleId":"126","severity":1,"message":"138","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":30,"column":22,"nodeType":"136","messageId":"137","endLine":30,"endColumn":24},{"ruleId":"134","severity":1,"message":"135","line":31,"column":27,"nodeType":"136","messageId":"137","endLine":31,"endColumn":29},{"ruleId":"134","severity":1,"message":"135","line":40,"column":18,"nodeType":"136","messageId":"137","endLine":40,"endColumn":20},{"ruleId":"134","severity":1,"message":"135","line":42,"column":25,"nodeType":"136","messageId":"137","endLine":42,"endColumn":27},{"ruleId":"139","severity":1,"message":"140","line":55,"column":57,"nodeType":"141","endLine":55,"endColumn":66},{"ruleId":"130","severity":1,"message":"131","line":208,"column":5,"nodeType":"132","messageId":"133","endLine":215,"endColumn":6},{"ruleId":"126","severity":1,"message":"138","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":25,"column":18,"nodeType":"136","messageId":"137","endLine":25,"endColumn":20},{"ruleId":"134","severity":1,"message":"135","line":27,"column":25,"nodeType":"136","messageId":"137","endLine":27,"endColumn":27},{"ruleId":"126","severity":1,"message":"138","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"138","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"142","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"143","line":2,"column":16,"nodeType":"128","messageId":"129","endLine":2,"endColumn":19},{"ruleId":"126","severity":1,"message":"144","line":2,"column":29,"nodeType":"128","messageId":"129","endLine":2,"endColumn":35},{"ruleId":"126","severity":1,"message":"138","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"142","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"145","line":2,"column":21,"nodeType":"128","messageId":"129","endLine":2,"endColumn":27},{"ruleId":"126","severity":1,"message":"144","line":2,"column":29,"nodeType":"128","messageId":"129","endLine":2,"endColumn":35},{"ruleId":"126","severity":1,"message":"138","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":18,"column":30,"nodeType":"136","messageId":"137","endLine":18,"endColumn":32},{"ruleId":"134","severity":1,"message":"135","line":23,"column":39,"nodeType":"136","messageId":"137","endLine":23,"endColumn":41},{"ruleId":"134","severity":1,"message":"135","line":24,"column":35,"nodeType":"136","messageId":"137","endLine":24,"endColumn":37},{"ruleId":"134","severity":1,"message":"135","line":26,"column":30,"nodeType":"136","messageId":"137","endLine":26,"endColumn":32},{"ruleId":"126","severity":1,"message":"146","line":9,"column":11,"nodeType":"128","messageId":"129","endLine":9,"endColumn":20},{"ruleId":"126","severity":1,"message":"138","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],["147"],["148"],"no-unused-vars","'Select' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Flex' is defined but never used.","'Box' is defined but never used.","'Spacer' is defined but never used.","'HStack' is defined but never used.","'hasCopied' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]